// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/Memory.jack

/**
 * Memory operations library.
 */
class Memory {
   // next location form which objects should be allocated
   static int free;

   // an array of all of memory (base address 0)
   static Array memory;

   /** Initializes memory parameters. */
   function void init() {
      let free = 2048;
      let memory = 0;
      return;
   }

   /** Returns the value of the main memory at this address. */
   function int peek(int address) {
      return memory[address];
   }

   /** Sets the value of the main memory at this address
    *  to the given value. */
   function void poke(int address, int value) {
      let memory[address] = value;
      return;
   }

   /** finds and allocates from the heap a memory block of the
    *  specified size and returns a reference to its base address. */
   function int alloc(int size) {
      var int ret;

      let ret = free;
      let free = free + size;

      return ret;
   }

   /** De-allocates the given object and frees its space. */
   function void deAlloc(int object) {
      // do nothing here - memory leaks are just so awesome
      return;
   }
}
